#ifndef OLISTTYPE_H
#define OLISTTYPE_H

#include "ListType.h"

template <class T>
class OListType:public ListType<T> {
   public:
      bool insert(const T&);
      bool find(const T&) const;
};

template <class T>
bool OListType<T>::find (const T& item) const {
   NodeType<T>* temp = this -> head;
   while (temp != NULL && temp -> info < item) {
      temp = temp -> link;
   }
   if (temp != NULL && temp -> info = item) {
      return true;
   }
   else {
      return false;
   }
}
