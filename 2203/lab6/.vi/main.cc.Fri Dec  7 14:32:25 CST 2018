/*
   lab5.cc -- Build a window manager

   Author: Larry Morell and Ryne Whitaker

   Modification History
   7/13/2018  -- Original version
*/
#include <iostream>
#include <fstream>
#include <sstream>
#include <ctype.h> 
#include <cstring> 
#include <ncurses.h> 
#include <time.h>
#include <stdlib.h>
#include "BorderedWindow.h"
#include "DebugWindow.h"
#include "CommandWindow.h"
using namespace std;

void process(string player, string computer, int &pWins, int &cWins, int &ties) {
   Window pRock(1, 20, 0, 0, "Player: ");
   pRock.write("Rock");
   
   Window pPaper(1, 20, 0, 0, "Player: ");
   pPaper.write("Paper");
   
   Window pScissors(1, 20, 0, 0, "Player: ");
   pScissors.write("Scissors");
   
   Window cRock(1, 20, 0, 20, "Computer: ");
   cRock.write("Rock");
   
   Window cPaper(1, 20, 0, 20, "Computer: ");
   cPaper.write("Paper");
   
   Window cScissors(1, 20, 0, 20, "Computer: ");
   cScissors.write("Scissors");
   
   Window error(1, 100, 2, 0, "");
   error.write("Please enter a valid selection. Enter \"r\" for rock, \"p\" for paper, \"s\" for scissors, or \"q\" to quit.");

   pRock.hideAll();
   cRock.hideAll();

   //Window playerBoard(1, 20, 3, 0, "");
   //playerBoard.write("Player: ");
   //playerBoard.refresh();

   //Window computerBoard(1, 20, 4, 0, "");
   //computerBoard.write("Computer: ");
   //computerBoard.refresh();
   
   //Window tiesBoard(1, 20, 5, 0, "");
   //tiesBoard.write("Ties: ");
   //tiesBoard.refresh();
   
   if (player == "r" && computer == "rock")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pRock.show();
   cRock.show();
   cRock.refreshAll();
   ties++;
   }
   else if (player == "r" && computer == "paper")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pRock.show();
   cPaper.show();
   cPaper.refreshAll();
   cWins++;
   }
   else if (player == "r" && computer == "scissors")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pRock.show();
   cScissors.show();
   cScissors.refreshAll();
   pWins++;
   }
   else if (player == "p" && computer == "rock")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pPaper.show();
   cRock.show();
   cRock.refreshAll();
   pWins++;
   }
   else if (player == "p" && computer == "paper")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pPaper.show();
   cPaper.show();
   cPaper.refreshAll();
   ties++;
   }
   else if (player == "p" && computer == "scissors")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pPaper.show();
   cScissors.show();
   cScissors.refreshAll();
   cWins++;
   }
   else if (player == "s" && computer == "rock")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pScissors.show();
   cRock.show();
   cRock.refreshAll();
   cWins++;
   }
   else if (player == "s" && computer == "paper")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pScissors.show();
   cPaper.show();
   cPaper.refreshAll();
   pWins++;
   }
   else if (player == "s" && computer == "scissors")
   {
   pRock.hideAll();
   pRock.refreshAll();
   pScissors.show();
   cScissors.show();
   cScissors.refreshAll();
   ties++;
   }
   else
   {
   pRock.hideAll();
   pRock.refreshAll();
   error.show();
   error.refresh();
   }
}

int main (int argc, char *argv[]) {
   initscr();
   cbreak();      /* Input line buffering disabled; pass on every char*/
   
   int pWins = 0;  // Counter for player wins
   int cWins = 0;  // Counter for computer wins
   int ties = 0;  // Counter for ties
   string player;

   srand(time(NULL)); // initialize the random seed for computer selection
   const string plays[3] {"rock", "paper", "scissors"};
   CommandWindow c1;
   c1.refresh();

   Window mousePrompt(1, 100, 3, 0, "");
   mousePrompt.write("Type 0 to enter keyboard mode or 1 to enter mouse mode, then press enter.");
   string mode = c1.readString();
   bool mouseMode;
   if (mode == "0")
	   mouseMode = false;
   else if (mode == "1")
	   mouseMode = true;

   if (!mouseMode) { 
      player = c1.readString();
      while (!(player == "q" or player == "Q")) {
         int randPlay = rand() % 3; // random play selection for computer
         string computer = plays[randPlay];
         process(player, computer, pWins, cWins, ties); 
         c1.clear();
         player = c1.readString();   
      }
   }
   else { 
      mousemask(BUTTON1_CLICKED | BUTTON2_CLICKED | BUTTON3_CLICKED | BUTTON1_TRIPLE_CLICKED, NULL);
      MEVENT event;
      int ch = getch();
         while (getmouse(&event) != BUTTON1_TRIPLE_CLICKED) {
            if (getmouse(&event) == BUTTON1_CLICKED) 
	       player = "r";
	    else if (getmouse(&event) == BUTTON2_CLICKED) 
               player = "p";
	    else if (getmouse(&event) == BUTTON3_CLICKED) 
               player = "s";
            int randPlay = rand() % 3; // random play selection for computer
            string computer = plays[randPlay];
            process(player, computer, pWins, cWins, ties); 
	    getmouse(&event);
	 }
   }

   endwin();         /* End curses mode        */
   return 0;
}

